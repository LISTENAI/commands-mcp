on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: darwin-arm64
            platform: macos-latest
            target: aarch64-apple-darwin
          - name: darwin-x64
            platform: macos-latest
            target: x86_64-apple-darwin
          - name: linux-x64
            platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win32-x64
            platform: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain for ${{ matrix.target }}
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: (Ubuntu) Install native dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            libudev-dev

      - name: Set up temperary SSH key to fetch cskburn-rs
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_CSKBURN }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - name: Archive distributable
        uses: actions/upload-artifact@v4
        with:
          name: commands-mcp_${{ matrix.name }}
          path: target/${{ matrix.target }}/release/commands-mcp${{ matrix.suffix }}

  pack-npm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: commands-mcp_*

      - name: Pack
        id: pack
        run: |
          for dir in commands-mcp_*; do
            platform=${dir#commands-mcp_}
            mkdir -p binaries/${platform}
            mv -v ${dir}/commands-mcp* binaries/${platform}/
            chmod +x binaries/${platform}/commands-mcp*
          done
          echo "tarball=$(npm pack)" >> "$GITHUB_OUTPUT"

      - name: Archive tarball
        uses: actions/upload-artifact@v4
        with:
          name: npm-tarball
          path: ${{ steps.pack.outputs.tarball }}
